{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst filterSlice = createSlice({\n  name: 'filter',\n  state: ''\n});\nconst filterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('ACTION: ', action);\n  switch (action.type) {\n    case 'SET_FILTER':\n      return action.payload;\n    default:\n      return state;\n  }\n};\nexport const handleChange = input => {\n  return {\n    type: 'SET_FILTER',\n    payload: input\n  };\n};\nexport default filterReducer;","map":{"version":3,"names":["createSlice","filterSlice","name","state","filterReducer","action","console","log","type","payload","handleChange","input"],"sources":["/home/hanasiu/Code/redux-anecdotes/src/reducers/filterReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  state: '',\n  \n}) \n\nconst filterReducer = (state = '', action) => {\n    console.log('ACTION: ', action)\n    switch (action.type) {\n      case 'SET_FILTER':\n        return action.payload\n      default:\n        return state\n    }\n  }\n\n  export const handleChange = input => {\n    return {\n        type: 'SET_FILTER',\n        payload: input\n    }\n  }\n\n  \n  export default filterReducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,WAAW,GAAGD,WAAW,CAAC;EAC9BE,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE;AAET,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAG,YAAwB;EAAA,IAAvBD,KAAK,uEAAG,EAAE;EAAA,IAAEE,MAAM;EACrCC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,MAAM,CAAC;EAC/B,QAAQA,MAAM,CAACG,IAAI;IACjB,KAAK,YAAY;MACf,OAAOH,MAAM,CAACI,OAAO;IACvB;MACE,OAAON,KAAK;EAAA;AAElB,CAAC;AAED,OAAO,MAAMO,YAAY,GAAGC,KAAK,IAAI;EACnC,OAAO;IACHH,IAAI,EAAE,YAAY;IAClBC,OAAO,EAAEE;EACb,CAAC;AACH,CAAC;AAGD,eAAeP,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}