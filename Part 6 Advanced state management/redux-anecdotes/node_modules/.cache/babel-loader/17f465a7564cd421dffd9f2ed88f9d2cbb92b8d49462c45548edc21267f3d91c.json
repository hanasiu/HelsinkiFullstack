{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport anecdoteService from '../services';\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState: [],\n  reducers: {\n    createAnecdote(state, action) {\n      state.push(action.payload);\n    },\n    addVotes(state, action) {\n      const id = action.payload;\n      const anecdoteToChange = state.find(n => n.id === id);\n      const changedAnecdote = {\n        ...anecdoteToChange,\n        votes: anecdoteToChange.votes + 1\n      };\n      console.log(JSON.parse(JSON.stringify(state)));\n      return state.map(anecdote => anecdote.id !== id ? anecdote : changedAnecdote);\n    },\n    appendAnecdote(state, action) {\n      state.push(action.payload);\n    },\n    setAnecdotes(state, action) {\n      return action.payload;\n    }\n  }\n});\nexport const {\n  createAnecdote,\n  addVotes,\n  appendAnecdote,\n  setAnecdotes\n} = anecdoteSlice.actions;\nexport default anecdoteSlice.reducer;\n\n// const anecdoteReducer = (state = initialState, action) => {\n//   console.log('state now: ', state)\n//   console.log('action', action)\n//   switch (action.type) {\n//     case 'NEW_ANECDOTE':\n//       return [...state, action.payload]\n//     case 'ADD_VOTE': {\n//       const id = action.payload.id\n//       const anecdoteToChange = state.find(n => n.id === id)\n//       const changedAnecdote = {\n//         ...anecdoteToChange,\n//         votes: anecdoteToChange.votes + 1\n//       }\n//       return state.map(anecdote =>\n//         anecdote.id !== id ? anecdote : changedAnecdote\n//       )\n//     }\n//     default:\n//       return state\n//   }\n// }\n\n// export const createAnecdote = (content) => {\n//   return {\n//     type: 'NEW_ANECDOTE',\n//     payload: {\n//       content,\n//       votes: 0,\n//       id: generateId()\n//     }\n//   }\n// }\n\n// export const addVotes = (id) => {\n//   return {\n//     type: 'ADD_VOTE',\n//     payload: { id }\n//   }\n// }","map":{"version":3,"names":["createSlice","anecdoteService","anecdoteSlice","name","initialState","reducers","createAnecdote","state","action","push","payload","addVotes","id","anecdoteToChange","find","n","changedAnecdote","votes","console","log","JSON","parse","stringify","map","anecdote","appendAnecdote","setAnecdotes","actions","reducer"],"sources":["/home/hanasiu/Code/redux-anecdotes/src/reducers/anecdoteReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport anecdoteService from '../services'\n\n\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState: [],\n  reducers: {\n    createAnecdote(state, action) {\n      state.push(action.payload)\n    },\n    addVotes(state, action) {\n      const id = action.payload\n      const anecdoteToChange = state.find(n => n.id === id)\n      const changedAnecdote = {\n        ...anecdoteToChange,\n        votes: anecdoteToChange.votes + 1\n      }\n\n      console.log(JSON.parse(JSON.stringify(state)))\n\n      return state.map(anecdote =>\n        anecdote.id !== id ? anecdote : changedAnecdote\n      )\n    },\n    appendAnecdote(state, action) {\n      state.push(action.payload)\n    },\n    setAnecdotes(state, action) {\n      return action.payload\n    }\n    }\n  })\n\nexport const { createAnecdote, addVotes, appendAnecdote, setAnecdotes } = anecdoteSlice.actions\nexport default anecdoteSlice.reducer\n\n\n// const anecdoteReducer = (state = initialState, action) => {\n//   console.log('state now: ', state)\n//   console.log('action', action)\n//   switch (action.type) {\n//     case 'NEW_ANECDOTE':\n//       return [...state, action.payload]\n//     case 'ADD_VOTE': {\n//       const id = action.payload.id\n//       const anecdoteToChange = state.find(n => n.id === id)\n//       const changedAnecdote = {\n//         ...anecdoteToChange,\n//         votes: anecdoteToChange.votes + 1\n//       }\n//       return state.map(anecdote =>\n//         anecdote.id !== id ? anecdote : changedAnecdote\n//       )\n//     }\n//     default:\n//       return state\n//   }\n// }\n\n\n// export const createAnecdote = (content) => {\n//   return {\n//     type: 'NEW_ANECDOTE',\n//     payload: {\n//       content,\n//       votes: 0,\n//       id: generateId()\n//     }\n//   }\n// }\n\n// export const addVotes = (id) => {\n//   return {\n//     type: 'ADD_VOTE',\n//     payload: { id }\n//   }\n// }"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,eAAe,MAAM,aAAa;AAGzC,MAAMC,aAAa,GAAGF,WAAW,CAAC;EAChCG,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,cAAc,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC5BD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC5B,CAAC;IACDC,QAAQ,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACtB,MAAMI,EAAE,GAAGJ,MAAM,CAACE,OAAO;MACzB,MAAMG,gBAAgB,GAAGN,KAAK,CAACO,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC;MACrD,MAAMI,eAAe,GAAG;QACtB,GAAGH,gBAAgB;QACnBI,KAAK,EAAEJ,gBAAgB,CAACI,KAAK,GAAG;MAClC,CAAC;MAEDC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACf,KAAK,CAAC,CAAC,CAAC;MAE9C,OAAOA,KAAK,CAACgB,GAAG,CAACC,QAAQ,IACvBA,QAAQ,CAACZ,EAAE,KAAKA,EAAE,GAAGY,QAAQ,GAAGR,eAAe,CAChD;IACH,CAAC;IACDS,cAAc,CAAClB,KAAK,EAAEC,MAAM,EAAE;MAC5BD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC5B,CAAC;IACDgB,YAAY,CAACnB,KAAK,EAAEC,MAAM,EAAE;MAC1B,OAAOA,MAAM,CAACE,OAAO;IACvB;EACA;AACF,CAAC,CAAC;AAEJ,OAAO,MAAM;EAAEJ,cAAc;EAAEK,QAAQ;EAAEc,cAAc;EAAEC;AAAa,CAAC,GAAGxB,aAAa,CAACyB,OAAO;AAC/F,eAAezB,aAAa,CAAC0B,OAAO;;AAGpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}